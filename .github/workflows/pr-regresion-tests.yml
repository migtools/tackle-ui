name: Regresion tests

on:
  push:
    paths-ignore:
      - ".gitignore"
      - "LICENSE"
      - "*.md"
      - ".github/ISSUE_TEMPLATE/**"
  pull_request:
    paths-ignore:
      - ".gitignore"
      - "LICENSE"
      - "*.md"
      - ".github/ISSUE_TEMPLATE/**"

jobs:
  ks8:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chrome]
    steps:
      - name: Checkout tackle-ui
        uses: actions/checkout@v2
        with:
          path: tackle-ui
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Build JS
        run: |
          yarn --cwd tackle-ui install
          yarn --cwd tackle-ui build
      - name: Build container image
        run: docker build -t tackle/tackle-ui:current-pr tackle-ui

      - name: Checkout tackle
        uses: actions/checkout@v2
        with:
          repository: konveyor/tackle
          path: tackle
      - name: Checkout tackle-ui-tests
        uses: actions/checkout@v2
        with:
          repository: konveyor/tackle-ui-tests
          path: tackle-ui-tests
      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.3.1
        with:
          minikube version: v1.18.1
          kubernetes version: v1.20.2
          start args: "--addons=registry --addons=ingress"
      - name: Validate Minikube
        run: minikube status | grep Running
      - name: Validate Cluster
        run: kubectl get nodes
      - name: Validate enabled addon in arg
        run: minikube addons list -o json | jq '.registry.Status' | grep enabled
      - name: Kubectl create namespace
        run: kubectl create ns tackle

      - name: Deploy tackle
        run: sleep 60s && kubectl create -f tackle/kubernetes/kubernetes-tackle.yaml -n tackle

      - name: Verify keycloak
        run: kubectl wait deployment/keycloak --for condition=available --timeout=-1s -n tackle
      - name: Verify tackle-controls
        run: kubectl wait deployment/tackle-controls --for condition=available --timeout=-1s -n tackle
      - name: Verify tackle-application-inventory
        run: kubectl wait deployment/tackle-application-inventory --for condition=available --timeout=-1s -n tackle
      - name: Verify tackle-pathfinder
        run: kubectl wait deployment/tackle-pathfinder --for condition=available --timeout=-1s -n tackle
      - name: Verify tackle-ui
        run: kubectl wait deployment/tackle-ui --for condition=available --timeout=-1s -n tackle

      # - name: Set custom tackle-ui
      #   run: |
      #     kubectl patch deployment tackle-ui --patch '{"spec":{"template":{"spec":{"containers":[{"name":"tackle-ui","imagePullPolicy":"Never"}]}}}}' -n tackle
      #     kubectl set image deployment/tackle-ui tackle-ui=tackle/tackle-ui:current-pr -n tackle
      #     kubectl wait deployment/tackle-ui --for condition=available --timeout=-1s -n tackle

      - name: Wait for Ingress
        run: |
          bash -c 'external_ip="";
          while [ -z $external_ip ];
            do echo "Waiting for end point...";
            external_ip=$(kubectl get ingress tackle --template="{{range .status.loadBalancer.ingress}}{{.ip}}{{end}}" -n tackle);[ -z "$external_ip" ] &&
            sleep 10;
          done;
          echo "End point ready:" &&
          echo $external_ip;
          export endpoint=$external_ip;
          echo "CYPRESS_tackleUrl=https://$external_ip" >>$GITHUB_ENV'

      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          working-directory: tackle-ui-tests
          record: false
          start: npx echo "Starting Minikube Cypress tests"
          config: pageLoadTimeout=100000
          browser: ${{ matrix.browser }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CYPRESS_user: admin
          CYPRESS_pass: admin
